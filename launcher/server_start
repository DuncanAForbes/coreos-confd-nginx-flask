#!/usr/bin/python
from flask import Flask
import re
import subprocess
import os

app = Flask(__name__)

def start_container(name):
    # Check if it's not already started
    try:
        service_check = subprocess.check_output(["fleetctl",
                                                 "--endpoint=http://%s:4001" % os.environ['HOST_IP'],
                                                 "status",
                                                 "app@%s" % name])
        return 'Already started'
    except subprocess.CalledProcessError:
        try:
            service_load = subprocess.check_output(["fleetctl" ,
                                                      "--endpoint=http://%s:4001" % os.environ['HOST_IP'],
                                                      "load",
                                                      "app@%s.service" % name,
                                                      "app-discovery@%s.service" % name])
            if re.search(r'Unit [\w@\-]+.service loaded on', service_load):
                try:
                    service_start = subprocess.check_output(["fleetctl" ,
                                                             "--endpoint=http://%s:4001" % os.environ['HOST_IP'],
                                                             "start",
                                                             "app@%s.service" % name])
                    if re.search(r'Unit [\w@\-]+.service launched on', service_start):
                        return 'Successful started'
                except subprocess.CalledProcessError:
                    return 'Start failure'
        except subprocess.CalledProcessError:
            return 'Load failure'

def isavailable(name):
    return True

@app.route('/ping')
def ping():
    return 'Up!\n'

@app.route('/create/<name>')
def create(name):
    if isavailable(name):
        is_starting = start_container(name)
        if is_starting == 'Successful started':
            return 'Launched application for %s\n' % name, 200
        else:
            return 'Failed launching application for %s: %s\n' % (name, is_starting), 400
    else:
        return 'Application %s is not available\n' % name

if __name__== '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
